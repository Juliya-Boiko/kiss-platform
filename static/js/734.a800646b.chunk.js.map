{"version":3,"file":"static/js/734.a800646b.chunk.js","mappings":"oNAGMA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,IAAPD,CAAH,8CACC,SAAAE,GAAC,OAAIA,EAAEC,MAAN,IAGJC,EAAO,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,OAAQH,EAAa,EAAbA,OACpC,OACE,SAACJ,EAAD,CACEQ,QAAS,CAAEC,QAAS,EAAGC,MAAO,IAC9BC,QAAS,CAAEF,QAAS,EAAGC,MAAO,GAC9BE,WAAY,CACVC,SAAU,EACVC,MAAO,GACPC,KAAM,CAAC,GAAK,IAAM,EAAG,IAEvBX,OAAQA,EARV,UAUE,iBAAKE,MAAOA,EAAOC,OAAQA,EAAQS,QAAQ,aAAaC,KAAK,OAAOC,MAAM,6BAA1E,WACE,iBAAMC,EAAE,yhHAAyhHF,KAAK,aACtiH,iBAAME,EAAE,osLAAosLF,KAAK,aACjtL,iBAAMR,QAAQ,OAAOW,SAAS,UAAUC,SAAS,UAAUF,EAAE,8WAA8WF,KAAK,aAChb,iBAAMR,QAAQ,MAAMW,SAAS,UAAUC,SAAS,UAAUF,EAAE,+WAA+WF,KAAK,aAChb,iBAAMG,SAAS,UAAUC,SAAS,UAAUF,EAAE,yXAAyXF,KAAK,aAC5a,iBAAME,EAAE,iRAAiRF,KAAK,cAIrS,C,0FC1BYK,GAAgBrB,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,IAAPD,CAAH,wD,sECDbsB,E,QAAUtB,GAAAA,IAAH,4RAOc,SAAAE,GAAC,OAAIA,EAAEqB,MAAMC,YAAYC,MAAxB,IAGD,SAAAvB,GAAC,OAAIA,EAAEqB,MAAMC,YAAYE,OAAxB,G,mGCT7BC,GAAS3B,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,OAAPD,CAAH,0VAED,SAAAE,GAAC,OAAIA,EAAEG,KAAN,IACC,SAAAH,GAAC,OAAIA,EAAEqB,MAAMK,OAAOC,GAAnB,IACG,SAAA3B,GAAC,OAAIA,EAAEqB,MAAMO,WAAWC,IAAvB,IACH,SAAA7B,GAAC,OAAIA,EAAEqB,MAAMS,SAASC,EAArB,IAKG,SAAA/B,GAAC,OAAIA,EAAEqB,MAAMW,aAAaC,CAAzB,IACT,SAAAjC,GAAC,OAAIA,EAAEqB,MAAMa,OAAOC,MAAMC,KAAzB,IACU,SAAApC,GAAC,OAAIA,EAAEqB,MAAMa,OAAOC,MAAME,KAAzB,IAGV,SAAArC,GAAC,OAAIA,EAAEqB,MAAMa,OAAOI,UAAUC,MAA7B,IACU,SAAAvC,GAAC,OAAIA,EAAEqB,MAAMa,OAAOI,UAAUE,MAA7B,IAIZC,EAAgB,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,MAAOzC,EAAqB,EAArBA,MAAO0C,EAAc,EAAdA,QAC5D,OACE,SAACpB,EAAD,CACEqB,WAAY,CAAEvC,MAAO,MACrBwC,SAAU,CAAExC,MAAO,IACnBmC,KAAMA,EACNC,SAAUA,EACVxC,MAAOA,EACP0C,QAASA,EANX,SAQGD,GAGN,C,+GChCKI,GAAiBlD,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,IAAPD,CAAH,0KAIH,SAAAE,GAAC,OAAIA,EAAEqB,MAAMO,WAAWqB,KAAvB,IACH,SAAAjD,GAAC,OAAIA,EAAEqB,MAAMS,SAASC,EAArB,IAEL,SAAA/B,GAAC,OAAIA,EAAEqB,MAAMa,OAAOI,UAAUY,MAA7B,IAGNC,GAAYrD,EAAAA,EAAAA,IAAOsD,EAAAA,IAAPtD,CAAH,6DAEJ,SAAAE,GAAC,OAAIA,EAAEqB,MAAMa,OAAOmB,QAAQC,KAA3B,IAGCC,EAAY,SAAC,GAAe,IAAbD,EAAY,EAAZA,MAC1B,OACE,UAACN,EAAD,CACE3C,QAAS,CAAEC,QAAS,EAAGC,MAAO,IAC9BC,QAAS,CAAEF,QAAS,EAAGC,MAAO,GAC9BE,WAAY,CACVC,SAAU,EACVE,KAAM,CAAC,GAAK,IAAM,EAAG,IALzB,WAQE,SAACuC,EAAD,CAAWK,KAAK,QAChB,uBAAIF,MAGT,C,0FC9BYG,GAAW3D,EAAAA,EAAAA,IAAO4D,EAAAA,GAAP5D,CAAH,uC,qICEf6D,EAAU7D,EAAAA,GAAAA,IAAH,uHAIG,SAAAE,GAAC,OAAGA,EAAEqB,MAAMK,OAAOK,EAAlB,IACN,SAAA/B,GAAC,OAAIA,EAAE4D,KAAN,IAGNC,EAAQ/D,EAAAA,GAAAA,MAAH,gRAED,SAAAE,GAAC,OAAGA,EAAEqB,MAAMS,SAASC,EAApB,IAMM,SAAA/B,GAAC,OAAGA,EAAEqB,MAAMO,WAAWkC,MAAtB,IACH,SAAA9D,GAAC,OAAGA,EAAEqB,MAAMS,SAASC,EAApB,IAGO,SAAA/B,GAAC,OAAGA,EAAEqB,MAAMa,OAAOC,MAAMC,KAAxB,IAGlB2B,EAAQjE,EAAAA,GAAAA,MAAH,iTAIE,SAAAE,GAAC,OAAGA,EAAEqB,MAAMK,OAAOC,GAAlB,IACS,SAAA3B,GAAC,OAAIA,EAAE4D,KAAN,IACL,SAAA5D,GAAC,OAAIA,EAAEqB,MAAMW,aAAaC,CAAzB,IAWP+B,EAAY,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOvB,EAAmC,EAAnCA,KAAMwB,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAUb,EAAY,EAAZA,MACxD,GAAkCc,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEA,OACE,UAACX,EAAD,CAASC,OAAOW,EAAAA,EAAAA,IAAkBF,EAAWf,EAAOW,GAApD,WACE,SAACF,EAAD,CACES,GAAIP,EACJQ,KAAMR,EACNvB,KAAMA,EACNwB,MAAOA,EACPQ,YAAY,cACZC,QAAS,SAACC,GAAD,OAAMN,EAAaM,EAAEC,OAAOJ,KAA5B,EACTb,OAAOW,EAAAA,EAAAA,IAAkBF,EAAWf,EAAOW,GAC3CE,SAAUA,KAEZ,SAACN,EAAD,CAAOiB,QAASb,EAAhB,SAAwBA,IACzBX,GAASe,IAAcJ,IAAS,SAAC,IAAD,CAAWX,MAAOA,MAGtD,C,uDChEM,IAAMyB,EAAS,CACpBC,YAAa,cACbC,KAAM,OACNC,OAAQ,SACRC,SAAU,W,0PCDZ,EAA6C9D,EAAAA,EAAAA,OAAAA,QAArC+D,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,QAAShC,EAAnC,EAAmCA,MAEtBiC,EAAa,SAACC,GACzB,OAAIA,IAAWT,EAAAA,EAAAA,KACN,CAAEU,QAAS,YAAa7B,MAAOwB,GAEpCI,IAAWT,EAAAA,EAAAA,YACN,CAAEU,QAAS,YAAa7B,MAAOyB,GAEpCG,IAAWT,EAAAA,EAAAA,OACN,CAAEU,QAAS,YAAa7B,MAAO0B,GAEpCE,IAAWT,EAAAA,EAAAA,SACN,CAAEU,QAAS,YAAa7B,MAAON,QADxC,CAGD,E,8BCbYoC,EAAgB,SAACC,GAwB5B,IAvBA,IAAMC,EAAU,CACdC,KAAM,CACJC,OAAQ,EACRC,MAAM,SAAC,MAAD,CAAQvC,KAAK,SACnBI,MAAOvC,EAAAA,EAAAA,OAAAA,QAAAA,SAET2E,OAAQ,CACNF,OAAQ,EACRC,MAAM,SAAC,MAAD,CAAgBvC,KAAK,OAC3BI,MAAOvC,EAAAA,EAAAA,OAAAA,QAAAA,SAET4E,SAAU,CACRH,OAAQ,EACRC,MAAM,SAAC,MAAD,CAAkBvC,KAAK,OAC7BI,MAAOvC,EAAAA,EAAAA,OAAAA,QAAAA,SAET6E,SAAU,CACRJ,OAAQ,EACRC,MAAM,SAAC,MAAD,CAAWvC,KAAK,OACtBI,MAAOvC,EAAAA,EAAAA,OAAAA,QAAAA,QAIF8E,EAAQ,EAAGA,EAAQR,EAAMS,OAAQD,IAAS,CACjD,IAAME,EAAUV,EAAMQ,GAClBE,EAAQtB,SAAWA,EAAAA,EAAAA,OACrBa,EAAQC,KAAKC,QAAU,GAErBO,EAAQtB,SAAWA,EAAAA,EAAAA,cACrBa,EAAQK,SAASH,QAAU,GAEzBO,EAAQtB,SAAWA,EAAAA,EAAAA,SACrBa,EAAQI,OAAOF,QAAS,GAEtBO,EAAQtB,SAAWA,EAAAA,EAAAA,WACrBa,EAAQM,SAASJ,QAAU,EAE9B,CAWD,OATgBQ,OAAOC,QAAQX,GAASY,KAAI,SAAAC,GAC1C,MAAO,CACL7D,MAAO6D,EAAK,GACZX,OAAQW,EAAK,GAAGX,OAChBlC,MAAO6C,EAAK,GAAG7C,MACfmC,KAAMU,EAAK,GAAGV,KAEjB,GAGF,ECpDYW,EAAiB,SAACf,GAoB7B,IAnBA,IAAMC,EAAU,CACdC,KAAM,CACJ3B,MAAO,EACPN,MAAOvC,EAAAA,EAAAA,OAAAA,QAAAA,SAET2E,OAAQ,CACN9B,MAAO,EACPN,MAAOvC,EAAAA,EAAAA,OAAAA,QAAAA,SAET4E,SAAU,CACR/B,MAAO,EACPN,MAAOvC,EAAAA,EAAAA,OAAAA,QAAAA,SAET6E,SAAU,CACRhC,MAAO,EACPN,MAAOvC,EAAAA,EAAAA,OAAAA,QAAAA,QAIF8E,EAAQ,EAAGA,EAAQR,EAAMS,OAAQD,IAAS,CACjD,IAAME,EAAUV,EAAMQ,GAClBE,EAAQtB,SAAWA,EAAAA,EAAAA,OACrBa,EAAQC,KAAK3B,OAAS,GAEpBmC,EAAQtB,SAAWA,EAAAA,EAAAA,cACrBa,EAAQK,SAAS/B,OAAS,GAExBmC,EAAQtB,SAAWA,EAAAA,EAAAA,SACrBa,EAAQI,OAAO9B,OAAQ,GAErBmC,EAAQtB,SAAWA,EAAAA,EAAAA,WACrBa,EAAQM,SAAShC,OAAS,EAE7B,CAUD,OARgBoC,OAAOC,QAAQX,GAASY,KAAI,SAAAC,GAC1C,MAAO,CACL7D,MAAO6D,EAAK,GACZvC,MAAOuC,EAAK,GAAGvC,MACfN,MAAO6C,EAAK,GAAG7C,MAElB,GAGF,EChDY+C,EAAgB,SAACnB,GAE5B,OADkBA,EAAOoB,MAAM,EAAG,IAAIC,MAAM,KAAKC,UAAUC,KAAK,IAEjE,E,mBCDYC,EAAc,SAACC,GAE1B,OADeA,EAAMC,MAAK,SAACC,EAAGC,GAAJ,OAAUC,IAAOD,EAAEE,WAAaD,IAAOF,EAAEG,UAAzC,GAE3B,E,oBCHYC,EAAgB,SAACN,GAC1B,IAAMO,EAASP,EAAMQ,QAAO,SAAAhB,GAAI,OAAIA,EAAK1B,SAAWA,EAAAA,EAAAA,QAApB,IAC1BkB,EAAWgB,EAAMQ,QAAO,SAAAhB,GAAI,OAAIA,EAAK1B,SAAWA,EAAAA,EAAAA,WAApB,IAC5BiB,EAASiB,EAAMQ,QAAO,SAAAhB,GAAI,OAAIA,EAAK1B,SAAWA,EAAAA,EAAAA,MAApB,IAC1Bc,EAAOoB,EAAMQ,QAAO,SAAAhB,GAAI,OAAIA,EAAK1B,SAAWA,EAAAA,EAAAA,IAApB,IAE9B,MADY,kBAAOyC,IAAP,OAAkBvB,IAAlB,OAA+BD,IAA/B,OAA0CH,GAEzD,ECTY6B,EAAe,SAACT,GAE3B,OADeA,EAAMC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEvE,MAAQwE,EAAExE,MAAQ,GAAK,CAAnC,GAE3B,C,2DCDOV,E,QAAWb,EAAAA,OAENkD,EAAoB,SAACF,EAAWf,EAAOW,GAClD,OAAIX,GAASe,EACJnC,EAAOmB,QAAQC,MAEnBA,GAASe,IAAcJ,EAGrB/B,EAAOI,UAAUqF,OAFfzF,EAAOC,MAAME,KAGvB,C","sources":["components/Logo/Logo.jsx","components/auth/common/MotionWrapper.styled.js","components/auth/common/Section.styled.js","components/buttons/ButtonPrimary.jsx","components/forms/auth/common/AuthError.jsx","components/forms/auth/common/AuthForm.styled.js","components/forms/auth/common/AuthInput.jsx","constants/status.js","helpers/badgeColor.js","helpers/cardFormatter.js","helpers/chartFormatter.js","helpers/dateFormatter.js","helpers/dateSorting.js","helpers/statusSorting.js","helpers/titleSorting.js","helpers/inputOutlineColor.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nconst Container = styled(motion.div)`\n  margin: 0 0 ${p => p.margin} 0;\n`;\n\nexport const Logo = ({ width, height, margin }) => {\n  return (\n    <Container\n      initial={{ opacity: 0, scale: 0.5 }}\n      animate={{ opacity: 1, scale: 1 }}\n      transition={{\n        duration: 1,\n        delay: 0.1,\n        ease: [0.5, 0.71, 1, 1],\n      }}\n      margin={margin}\n    >\n      <svg width={width} height={height} viewBox=\"0 0 224 89\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M102.672 45.4559V37.7413L105.999 33.333L112.958 45.4559H120.005L109.807 28.1752L118.43 16.7136H111.339L102.847 28.4838H102.672V16.7136H96.2376V45.4559H102.672ZM133.41 45.4559V16.7136H126.975V45.4559H133.41ZM152.723 45.9849C154.416 45.9849 155.933 45.7424 157.275 45.2575C158.618 44.7726 159.749 44.1261 160.668 43.3179C161.587 42.5097 162.287 41.5692 162.769 40.4965C163.25 39.4238 163.491 38.285 163.491 37.0801C163.491 35.0522 162.988 33.4212 161.981 32.1868C160.974 30.9525 159.595 29.9827 157.844 29.2773L154.168 27.7785C153.555 27.514 152.986 27.2715 152.461 27.0511C151.935 26.8307 151.476 26.5956 151.082 26.3458C150.688 26.096 150.381 25.8168 150.163 25.5082C149.944 25.1996 149.834 24.8249 149.834 24.3841C149.834 23.5612 150.163 22.922 150.819 22.4664C151.476 22.0109 152.358 21.7832 153.467 21.7832C154.605 21.7832 155.641 21.9815 156.575 22.3783C157.509 22.775 158.443 23.3408 159.376 24.0755L162.659 19.9757C161.434 18.7414 160.011 17.801 158.392 17.1544C156.772 16.5078 155.131 16.1846 153.467 16.1846C151.979 16.1846 150.615 16.405 149.375 16.8458C148.135 17.2867 147.062 17.8965 146.158 18.6753C145.253 19.4541 144.553 20.3651 144.057 21.4084C143.56 22.4518 143.312 23.5612 143.312 24.7367C143.312 25.7947 143.473 26.7425 143.794 27.5801C144.115 28.4177 144.545 29.1524 145.085 29.7843C145.625 30.4161 146.238 30.9672 146.924 31.4374C147.609 31.9076 148.317 32.2897 149.046 32.5836L152.767 34.1706C153.38 34.4351 153.942 34.6775 154.452 34.8979C154.963 35.1184 155.401 35.3535 155.765 35.6033C156.13 35.8531 156.407 36.1396 156.597 36.4629C156.787 36.7862 156.882 37.1682 156.882 37.6091C156.882 38.4613 156.553 39.1373 155.897 39.6369C155.24 40.1365 154.241 40.3863 152.898 40.3863C151.702 40.3863 150.484 40.1071 149.243 39.5487C148.003 38.9903 146.872 38.2703 145.851 37.3887L142.174 41.8411C143.633 43.2223 145.289 44.2583 147.142 44.9489C148.995 45.6396 150.856 45.9849 152.723 45.9849ZM180.134 45.9849C181.827 45.9849 183.344 45.7424 184.687 45.2575C186.029 44.7726 187.16 44.1261 188.079 43.3179C188.998 42.5097 189.698 41.5692 190.18 40.4965C190.661 39.4238 190.902 38.285 190.902 37.0801C190.902 35.0522 190.399 33.4212 189.392 32.1868C188.385 30.9525 187.007 29.9827 185.256 29.2773L181.579 27.7785C180.966 27.514 180.397 27.2715 179.872 27.0511C179.347 26.8307 178.887 26.5956 178.493 26.3458C178.099 26.096 177.793 25.8168 177.574 25.5082C177.355 25.1996 177.245 24.8249 177.245 24.3841C177.245 23.5612 177.574 22.922 178.23 22.4664C178.887 22.0109 179.77 21.7832 180.879 21.7832C182.017 21.7832 183.052 21.9815 183.986 22.3783C184.92 22.775 185.854 23.3408 186.788 24.0755L190.071 19.9757C188.845 18.7414 187.422 17.801 185.803 17.1544C184.183 16.5078 182.542 16.1846 180.879 16.1846C179.39 16.1846 178.026 16.405 176.786 16.8458C175.546 17.2867 174.473 17.8965 173.569 18.6753C172.664 19.4541 171.964 20.3651 171.468 21.4084C170.972 22.4518 170.724 23.5612 170.724 24.7367C170.724 25.7947 170.884 26.7425 171.205 27.5801C171.526 28.4177 171.956 29.1524 172.496 29.7843C173.036 30.4161 173.649 30.9672 174.335 31.4374C175.02 31.9076 175.728 32.2897 176.458 32.5836L180.178 34.1706C180.791 34.4351 181.353 34.6775 181.863 34.8979C182.374 35.1184 182.812 35.3535 183.177 35.6033C183.541 35.8531 183.818 36.1396 184.008 36.4629C184.198 36.7862 184.293 37.1682 184.293 37.6091C184.293 38.4613 183.964 39.1373 183.308 39.6369C182.651 40.1365 181.652 40.3863 180.309 40.3863C179.113 40.3863 177.895 40.1071 176.655 39.5487C175.414 38.9903 174.284 38.2703 173.262 37.3887L169.586 41.8411C171.045 43.2223 172.701 44.2583 174.554 44.9489C176.407 45.6396 178.267 45.9849 180.134 45.9849Z\" fill=\"#6BC2BB\"/>\n        <path d=\"M100.676 72.9133V66.5082H103.007C104.005 66.5082 104.945 66.3826 105.828 66.1315C106.71 65.8803 107.487 65.4939 108.158 64.9722C108.83 64.4505 109.362 63.7839 109.756 62.9724C110.149 62.1609 110.346 61.2045 110.346 60.1032C110.346 58.9632 110.149 58.002 109.756 57.2195C109.362 56.4369 108.83 55.809 108.158 55.3356C107.487 54.8622 106.7 54.5241 105.799 54.3212C104.897 54.1184 103.928 54.0169 102.892 54.0169H96.4462V72.9133H100.676ZM102.748 63.1173H100.676V57.4078H102.633C103.784 57.4078 104.667 57.6107 105.281 58.0165C105.895 58.4222 106.202 59.1178 106.202 60.1032C106.202 62.1126 105.051 63.1173 102.748 63.1173ZM119.828 73.2611C120.307 73.2611 120.724 73.2273 121.079 73.1596C121.434 73.092 121.727 73.0099 121.957 72.9133L121.439 69.7542C121.324 69.7929 121.233 69.8122 121.166 69.8122H120.921C120.748 69.8122 120.581 69.7253 120.417 69.5514C120.254 69.3775 120.173 69.0683 120.173 68.6239V52.5968H115.943V68.45C115.943 69.1842 116.01 69.846 116.144 70.4353C116.278 71.0246 116.494 71.527 116.792 71.9424C117.089 72.3578 117.487 72.6814 117.986 72.9133C118.485 73.1451 119.098 73.2611 119.828 73.2611ZM130.461 73.2611C131.266 73.2611 132.005 73.092 132.676 72.7539C133.348 72.4158 133.991 71.9762 134.604 71.4352H134.72L135.007 72.9133H138.461V64.6824C138.461 62.4604 137.976 60.8229 137.007 59.7699C136.039 58.7169 134.633 58.1904 132.792 58.1904C131.66 58.1904 130.59 58.3643 129.583 58.712C128.576 59.0598 127.612 59.5139 126.691 60.0742L128.216 62.8855C128.907 62.4797 129.554 62.1609 130.158 61.9291C130.763 61.6972 131.372 61.5813 131.986 61.5813C132.772 61.5813 133.333 61.7697 133.669 62.1464C134.005 62.5232 134.192 63.0304 134.23 63.668C131.41 63.9578 129.367 64.5278 128.101 65.3779C126.835 66.2281 126.202 67.4067 126.202 68.9137C126.202 69.532 126.302 70.102 126.504 70.6237C126.705 71.1454 126.988 71.6043 127.353 72.0003C127.717 72.3964 128.163 72.7056 128.691 72.9278C129.218 73.15 129.808 73.2611 130.461 73.2611ZM131.899 69.9571C131.401 69.9571 131.003 69.846 130.705 69.6238C130.408 69.4016 130.259 69.0587 130.259 68.5949C130.259 68.0346 130.547 67.5516 131.122 67.1458C131.698 66.7401 132.734 66.4309 134.23 66.2184V68.7399C133.847 69.1263 133.482 69.4258 133.137 69.6383C132.792 69.8508 132.379 69.9571 131.899 69.9571ZM149.698 73.2611C150.389 73.2611 150.993 73.2031 151.511 73.0872C152.029 72.9712 152.48 72.8553 152.863 72.7394L152.202 69.6383C152.01 69.7156 151.794 69.7832 151.554 69.8412C151.314 69.8991 151.079 69.9281 150.849 69.9281C150.293 69.9281 149.847 69.7494 149.511 69.392C149.175 69.0345 149.007 68.45 149.007 67.6385V61.8711H152.432V58.5381H149.007V54.7125H145.497L145.007 58.5381L142.82 58.712V61.8711H144.777V67.6965C144.777 68.5273 144.868 69.2857 145.05 69.9716C145.233 70.6575 145.52 71.242 145.914 71.725C146.307 72.208 146.815 72.5848 147.439 72.8553C148.062 73.1258 148.815 73.2611 149.698 73.2611ZM162.863 72.9133V61.8711H165.425V58.5381H162.863V57.6687C162.863 56.9345 163.007 56.408 163.295 56.0892C163.583 55.7704 163.986 55.611 164.504 55.611C164.945 55.611 165.434 55.7076 165.971 55.9008L166.748 52.7707C166.422 52.6548 166.014 52.5388 165.525 52.4229C165.036 52.307 164.494 52.249 163.899 52.249C162.94 52.249 162.125 52.3939 161.453 52.6838C160.782 52.9736 160.235 53.3697 159.813 53.872C159.391 54.3744 159.089 54.9637 158.907 55.6399C158.724 56.3162 158.633 57.0311 158.633 57.7846V58.5671L156.734 58.712V61.8711H158.633V72.9133H162.863ZM176.259 73.2611C177.161 73.2611 178.029 73.092 178.863 72.7539C179.698 72.4158 180.437 71.9279 181.079 71.2903C181.722 70.6527 182.235 69.8653 182.619 68.9282C183.002 67.9912 183.194 66.9236 183.194 65.7257C183.194 64.5278 183.002 63.4603 182.619 62.5232C182.235 61.5861 181.722 60.7988 181.079 60.1611C180.437 59.5235 179.698 59.0357 178.863 58.6975C178.029 58.3594 177.161 58.1904 176.259 58.1904C175.357 58.1904 174.484 58.3594 173.64 58.6975C172.796 59.0357 172.053 59.5235 171.41 60.1611C170.767 60.7988 170.254 61.5861 169.871 62.5232C169.487 63.4603 169.295 64.5278 169.295 65.7257C169.295 66.9236 169.487 67.9912 169.871 68.9282C170.254 69.8653 170.767 70.6527 171.41 71.2903C172.053 71.9279 172.796 72.4158 173.64 72.7539C174.484 73.092 175.357 73.2611 176.259 73.2611ZM176.259 69.8122C175.377 69.8122 174.719 69.4451 174.288 68.7109C173.856 67.9767 173.64 66.9816 173.64 65.7257C173.64 64.4698 173.856 63.4748 174.288 62.7406C174.719 62.0063 175.377 61.6392 176.259 61.6392C177.122 61.6392 177.775 62.0063 178.216 62.7406C178.657 63.4748 178.878 64.4698 178.878 65.7257C178.878 66.9816 178.657 67.9767 178.216 68.7109C177.775 69.4451 177.122 69.8122 176.259 69.8122ZM193.022 72.9133V64.5664C193.405 63.581 193.89 62.8951 194.475 62.5087C195.06 62.1223 195.621 61.9291 196.158 61.9291C196.465 61.9291 196.734 61.9484 196.964 61.987C197.194 62.0257 197.444 62.0836 197.712 62.1609L198.403 58.4802C198.192 58.3836 197.957 58.3111 197.698 58.2628C197.439 58.2145 197.108 58.1904 196.705 58.1904C195.976 58.1904 195.247 58.4222 194.518 58.8859C193.789 59.3496 193.165 60.0742 192.648 61.0596H192.532L192.245 58.5381H188.791V72.9133H193.022ZM207.165 72.9133V63.2043C208.048 62.2768 208.854 61.8131 209.583 61.8131C210.197 61.8131 210.643 62.0063 210.921 62.3928C211.199 62.7792 211.338 63.4941 211.338 64.5374V72.9133H215.568V63.2043C216.489 62.2768 217.305 61.8131 218.014 61.8131C218.628 61.8131 219.074 62.0063 219.353 62.3928C219.631 62.7792 219.77 63.4941 219.77 64.5374V72.9133H224V63.9868C224 62.1899 223.64 60.7746 222.921 59.7409C222.201 58.7072 221.074 58.1904 219.54 58.1904C218.58 58.1904 217.751 58.4271 217.05 58.9004C216.35 59.3738 215.683 59.9389 215.05 60.5959C214.686 59.823 214.192 59.2289 213.568 58.8135C212.945 58.3981 212.125 58.1904 211.108 58.1904C210.168 58.1904 209.362 58.4077 208.691 58.8425C208.019 59.2772 207.386 59.794 206.791 60.393H206.676L206.388 58.5381H202.935V72.9133H207.165Z\" fill=\"#6BC2BB\"/>\n        <path opacity=\"0.35\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M40.7778 36.7279L70.4102 58.7904C72.2263 60.1426 72.6102 62.7215 71.2676 64.5505C71.026 64.8797 70.737 65.1707 70.4102 65.414L40.7778 87.4765C38.0601 89.5 34.3518 89.509 31.6243 87.4989L1.67466 65.4259C-0.147944 64.0826 -0.54423 61.5056 0.789529 59.67C1.0374 59.3289 1.33594 59.0282 1.67466 58.7786L31.6243 36.7055C34.3518 34.6954 38.0601 34.7045 40.7778 36.7279Z\" fill=\"#60AEA8\"/>\n        <path opacity=\"0.7\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M40.7778 19.0844L70.4102 41.1469C72.2263 42.499 72.6102 45.0779 71.2676 46.907C71.026 47.2361 70.737 47.5271 70.4102 47.7705L40.7778 69.833C38.0601 71.8564 34.3518 71.8655 31.6243 69.8553L1.67466 47.7823C-0.147944 46.439 -0.54423 43.8621 0.789529 42.0265C1.0374 41.6853 1.33594 41.3847 1.67466 41.135L31.6243 19.062C34.3518 17.0518 38.0601 17.0609 40.7778 19.0844Z\" fill=\"#60AEA8\"/>\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M40.7816 1.52381L70.414 23.5863C72.2301 24.9385 72.614 27.5174 71.2714 29.3464C71.0298 29.6756 70.7408 29.9666 70.414 30.2099L40.7816 52.2724C38.0639 54.2959 34.3556 54.3049 31.6281 52.2948L1.67844 30.2217C-0.14416 28.8785 -0.540446 26.3015 0.793314 24.4659C1.04118 24.1248 1.33972 23.8241 1.67844 23.5745L31.6281 1.50143C34.3556 -0.508711 38.0639 -0.499644 40.7816 1.52381Z\" fill=\"#DB4D45\"/>\n        <path d=\"M49.5297 19.4206C45.8932 16.9115 40.8025 16.847 37.4647 19.6355L36.1574 20.7262L34.8501 19.6355C31.5189 16.847 26.2099 17.0834 22.5734 19.5925C18.4061 22.4724 18.0813 26.9533 21.8106 30.0749L36.1569 40.6245L50.4976 30.0749C54.2336 26.9533 53.697 22.3004 49.5297 19.4206Z\" fill=\"white\"/>\n      </svg>\n    </Container>\n  );\n}","import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nexport const MotionWrapper = styled(motion.div)`\n  width: 100%;\n  height: 100%;\n`;","import styled from \"styled-components\";\n\nexport const Section = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  @media screen and (min-width: ${p => p.theme.breakpoints.mobile}) {\n    width: 350px;\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints.desktop}) {\n    width: 450px;\n  }\n`;","import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nconst Button = styled(motion.button)`\n  display: block;\n  width: ${p => p.width};\n  padding: ${p => p.theme.spaces.xxs} 0;\n  font-weight: ${p => p.theme.fontWeight.bold};\n  font-size: ${p => p.theme.fontSize.xs};\n  line-height: 1.2;\n  text-align: center;\n  border: none;\n  outline: none;\n  border-radius: ${p => p.theme.borderRadius.s};\n  color: ${p => p.theme.colors.brand.white};\n  background-color: ${p => p.theme.colors.brand.green};\n  cursor: pointer;\n  &:disabled {\n    color: ${p => p.theme.colors.grayScale.gray40};\n    background-color: ${p => p.theme.colors.grayScale.gray10};\n  }\n`;\n\nexport const ButtonPrimary = ({ type, disabled, title, width, onClick }) => {\n  return (\n    <Button\n      whileHover={{ scale: 1.05 }}\n      whileTap={{ scale: 0.9 }}\n      type={type}\n      disabled={disabled}\n      width={width}\n      onClick={onClick}\n    >\n      {title}\n    </Button>\n  );\n}","import styled from \"styled-components\";\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\nimport { motion } from \"framer-motion\";\n\nconst ErrorContainer = styled(motion.div)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: ${p => p.theme.fontWeight.light};\n  font-size: ${p => p.theme.fontSize.xs};\n  line-height: 1.2;\n  color: ${p => p.theme.colors.grayScale.gray30};\n`;\n\nconst ErrorIcon = styled(AiOutlineInfoCircle)`\n  margin: 0 5px 0 0;\n  color: ${p => p.theme.colors.support.error};\n`;\n\nexport const AuthError = ({ error }) => {\n  return (\n    <ErrorContainer\n      initial={{ opacity: 0, scale: 0.5 }}\n      animate={{ opacity: 1, scale: 1 }}\n      transition={{\n        duration: 1,\n        ease: [0.5, 0.71, 1, 1],\n      }}\n    >\n      <ErrorIcon size=\"15\"/>\n      <p>{error}</p>\n    </ErrorContainer>\n  );\n}","import styled from \"styled-components\";\nimport { Form } from \"formik\";\n\nexport const AuthForm = styled(Form)`\n  width: 100%;\n`;","import styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { inputOutlineColor } from \"helpers\";\nimport { AuthError } from \"./AuthError\";\n\nconst Wrapper = styled.div`\n  display: block;\n  width: 100%;\n  position: relative;\n  margin: 0 0 ${p=> p.theme.spaces.xs} 0;\n  color: ${p => p.color};\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  left: ${p=> p.theme.fontSize.xs};\n  top: 50%;\n  transform: translateY(-50%);\n  &::first-letter {\n    text-transform: capitalize;\n  }\n  font-weight: ${p=> p.theme.fontWeight.medium};\n  font-size: ${p=> p.theme.fontSize.xs};\n  line-height: 1.5;\n  color: inherit;\n  background-color:  ${p=> p.theme.colors.brand.white};\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  border: none;\n  margin: 0 0 3px 0;\n  padding: ${p=> p.theme.spaces.xxs};\n  outline: 1px solid ${p => p.color};\n  border-radius: ${p => p.theme.borderRadius.s};\n  &::placeholder {\n    opacity: 0;\n  }\n  &:focus + label, &:not(:placeholder-shown) + label {\n    top: 0;\n    padding: 0 3px;\n    font-size: 10px;\n  }\n`;\n\nexport const AuthInput = ({ input, type, value, onChange, error }) => {\n  const [showError, setShowError] = useState(null);\n\n  return (\n    <Wrapper color={inputOutlineColor(showError, error, input)}> \n      <Input\n        id={input}\n        name={input}\n        type={type}\n        value={value}\n        placeholder=\"placeholder\"\n        onFocus={(e)=> setShowError(e.target.name)}\n        color={inputOutlineColor(showError, error, input)}\n        onChange={onChange}\n      />\n      <Label htmlFor={input}>{input}</Label>\n    {error && showError === input && <AuthError error={error} />}\n    </Wrapper>\n  );\n};","export const status = {\n  IN_PROGRESS: 'in progress',\n  DONE: 'done',\n  PAUSED: 'paused',\n  URGENTLY: 'urgently',\n}\n","import { status } from \"constants/status\";\nimport { theme } from \"style/theme\";\n\nconst { success, message, warning, error } = theme.colors.support;\n\nexport const badgeColor = (string) => {\n  if (string === status.DONE) {\n    return { bgColor: '#0bb07b33', color: success}\n  }\n  if (string === status.IN_PROGRESS) {\n    return { bgColor: '#4070f433', color: message}\n  }\n  if (string === status.PAUSED) {\n    return { bgColor: '#ffad0d33', color: warning}\n  }\n  if (string === status.URGENTLY) {\n    return { bgColor: '#f03d3d33', color: error}\n  }\n};","import { theme } from \"style/theme\";\nimport { status } from \"constants/status\";\nimport { MdDone, MdHourglassEmpty, MdFlashOn } from \"react-icons/md\";\nimport { AiOutlinePause } from \"react-icons/ai\";\n\nexport const cardFormatter = (array) => {\n  const dataObj = {\n    done: {\n      amount: 0,\n      icon: <MdDone size=\"25px\" />,\n      color: theme.colors.support.success\n    },\n    paused: {\n      amount: 0,\n      icon: <AiOutlinePause size=\"25\" />,\n      color: theme.colors.support.warning\n    },\n    progress: {\n      amount: 0,\n      icon: <MdHourglassEmpty size=\"25\" />,\n      color: theme.colors.support.message\n    },\n    urgently: {\n      amount: 0,\n      icon: <MdFlashOn size=\"25\" />,\n      color: theme.colors.support.error\n    }\n  };\n\n  for (let index = 0; index < array.length; index++) {\n    const element = array[index];\n    if (element.status === status.DONE) {\n      dataObj.done.amount += 1;\n    }\n    if (element.status === status.IN_PROGRESS) {\n      dataObj.progress.amount += 1;\n    }\n    if (element.status === status.PAUSED) {\n      dataObj.paused.amount +=1\n    }\n    if (element.status === status.URGENTLY) {\n      dataObj.urgently.amount += 1;\n    }\n  }\n  \n  const dataArr = Object.entries(dataObj).map(item => {\n    return {\n      title: item[0],\n      amount: item[1].amount,\n      color: item[1].color,\n      icon: item[1].icon\n    }\n  });\n  \n  return dataArr;\n}","import { theme } from \"style/theme\";\nimport { status } from \"constants/status\";\n\nexport const chartFormatter = (array) => {\n  const dataObj = {\n    done: {\n      value: 0,\n      color: theme.colors.support.success\n    },\n    paused: {\n      value: 0,\n      color: theme.colors.support.warning\n    },\n    progress: {\n      value: 0,\n      color: theme.colors.support.message\n    },\n    urgently: {\n      value: 0,\n      color: theme.colors.support.error\n    }\n  };\n\n  for (let index = 0; index < array.length; index++) {\n    const element = array[index];\n    if (element.status === status.DONE) {\n      dataObj.done.value += 1;\n    }\n    if (element.status === status.IN_PROGRESS) {\n      dataObj.progress.value += 1;\n    }\n    if (element.status === status.PAUSED) {\n      dataObj.paused.value +=1\n    }\n    if (element.status === status.URGENTLY) {\n      dataObj.urgently.value += 1;\n    }\n  }\n  \n  const dataArr = Object.entries(dataObj).map(item => {\n    return {\n      title: item[0],\n      value: item[1].value,\n      color: item[1].color,\n    }\n  });\n  \n  return dataArr;\n}","export const dateFormatter = (string) => {\n  const formatted = string.slice(0, 10).split('-').reverse().join('-');\n  return formatted;\n};","import moment from \"moment\";\n\nexport const dateSorting = (items) => {\n  const sorted = items.sort((a, b) => moment(b.updatedAt) - moment(a.updatedAt));\n  return sorted;\n};","import { status } from \"constants/status\";\n\nexport const statusSorting = (items) => {\n    const urgent = items.filter(item => item.status === status.URGENTLY);\n    const progress = items.filter(item => item.status === status.IN_PROGRESS);\n    const paused = items.filter(item => item.status === status.PAUSED);\n    const done = items.filter(item => item.status === status.DONE);\n    const sorted = [...urgent, ...progress, ...paused, ...done];\n    return sorted;\n};","export const titleSorting = (items) => {\n  const sorted = items.sort((a, b) => a.title > b.title ? 1 : -1);\n  return sorted;\n};","import { theme } from \"style/theme\";\n\nconst { colors } = theme;\n\nexport const inputOutlineColor = (showError, error, input) => {\n  if (error && showError) {\n    return colors.support.error;\n  }\n  if (!error && showError === input) {\n    return colors.brand.green;\n  }\n  return colors.grayScale.gray20;\n};"],"names":["Container","styled","motion","p","margin","Logo","width","height","initial","opacity","scale","animate","transition","duration","delay","ease","viewBox","fill","xmlns","d","fillRule","clipRule","MotionWrapper","Section","theme","breakpoints","mobile","desktop","Button","spaces","xxs","fontWeight","bold","fontSize","xs","borderRadius","s","colors","brand","white","green","grayScale","gray40","gray10","ButtonPrimary","type","disabled","title","onClick","whileHover","whileTap","ErrorContainer","light","gray30","ErrorIcon","AiOutlineInfoCircle","support","error","AuthError","size","AuthForm","Form","Wrapper","color","Label","medium","Input","AuthInput","input","value","onChange","useState","showError","setShowError","inputOutlineColor","id","name","placeholder","onFocus","e","target","htmlFor","status","IN_PROGRESS","DONE","PAUSED","URGENTLY","success","message","warning","badgeColor","string","bgColor","cardFormatter","array","dataObj","done","amount","icon","paused","progress","urgently","index","length","element","Object","entries","map","item","chartFormatter","dateFormatter","slice","split","reverse","join","dateSorting","items","sort","a","b","moment","updatedAt","statusSorting","urgent","filter","titleSorting","gray20"],"sourceRoot":""}