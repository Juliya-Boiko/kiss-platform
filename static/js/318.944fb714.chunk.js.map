{"version":3,"file":"static/js/318.944fb714.chunk.js","mappings":"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","sources":["components/buttons/ButtonPrimary.jsx","helpers/inputOutlineColor.js","components/forms/auth/common/AuthError.jsx","components/forms/auth/common/AuthInput.jsx","helpers/nameCapitalize.js","schemas/profileSchema.js","components/forms/auth/ProfileForm.jsx","pages/ProfilePage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nconst Button = styled.button`\n  display: block;\n  width: ${p => p.width};\n  padding: ${p => p.theme.spaces.xxs} 0;\n  font-weight: ${p => p.theme.fontWeight.bold};\n  font-size: ${p => p.theme.fontSize.xs};\n  line-height: 1.2;\n  text-align: center;\n  border: none;\n  outline: none;\n  border-radius: ${p => p.theme.borderRadius.s};\n  color: ${p => p.theme.colors.brand.white};\n  background-color: ${p => p.theme.colors.brand.green};\n  cursor: pointer;\n  &:disabled {\n    color: ${p => p.theme.colors.grayScale.gray40};\n    background-color: ${p => p.theme.colors.grayScale.gray10};\n  }\n`;\n\nexport const ButtonPrimary = ({ type, disabled, title, width, onClick }) => {\n  return (\n    <Button type={type} disabled={disabled} width={width} onClick={onClick}>{title}</Button>\n  );\n}","import { theme } from \"style/theme\";\n\nconst { colors } = theme;\n\nexport const inputOutlineColor = (showError, error, input) => {\n  if (error && showError) {\n    return colors.support.error;\n  }\n  if (!error && showError === input) {\n    return colors.brand.green;\n  }\n  return colors.grayScale.gray20;\n};","import styled from \"styled-components\";\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\n\nconst ErrorContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: ${p => p.theme.fontWeight.light};\n  font-size: ${p => p.theme.fontSize.xs};\n  line-height: 1.2;\n  color: ${p => p.theme.colors.grayScale.gray30};\n`;\n\nconst ErrorIcon = styled(AiOutlineInfoCircle)`\n  margin: 0 5px 0 0;\n  color: ${p => p.theme.colors.support.error};\n`;\n\nexport const AuthError = ({ error }) => {\n  return (\n    <ErrorContainer>\n      <ErrorIcon size=\"15\"/>\n      <p>{error}</p>\n    </ErrorContainer>\n  );\n}","import styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { inputOutlineColor } from \"helpers/inputOutlineColor\";\nimport { nameCapitalize } from \"helpers/nameCapitalize\";\nimport { AuthError } from \"./AuthError\";\n\nconst Wrapper = styled.div`\n  display: block;\n  width: 100%;\n  position: relative;\n  margin: 0 0 ${p=> p.theme.spaces.xs} 0;\n  color: ${p => p.color};\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  left: ${p=> p.theme.fontSize.xs};\n  top: 50%;\n  transform: translateY(-50%);\n\n  font-weight: ${p=> p.theme.fontWeight.medium};\n  font-size: ${p=> p.theme.fontSize.xs};\n  line-height: 1.5;\n  color: inherit;\n  background-color:  ${p=> p.theme.colors.brand.white};\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  border: none;\n  margin: 0 0 3px 0;\n  padding: ${p=> p.theme.spaces.xxs};\n  outline: 1px solid ${p => p.color};\n  border-radius: ${p => p.theme.borderRadius.s};\n  &::placeholder {\n    opacity: 0;\n  }\n  &:focus + label, &:not(:placeholder-shown) + label {\n    top: 0;\n    padding: 0 3px;\n    font-size: 10px;\n  }\n`;\n\nexport const AuthInput = ({ input, type, value, onChange, error }) => {\n  const [showError, setShowError] = useState(null);\n\n  return (\n    <Wrapper color={inputOutlineColor(showError, error, input)}> \n      <Input\n        id={input}\n        name={input}\n        type={type}\n        value={value}\n        placeholder=\"placeholder\"\n        onFocus={(e)=> setShowError(e.target.name)}\n        color={inputOutlineColor(showError, error, input)}\n        onChange={onChange}\n      />\n      <Label htmlFor={input}>{nameCapitalize(input)}</Label>\n    {error && showError === input && <AuthError error={error} />}\n    </Wrapper>\n  );\n};","export const nameCapitalize = (string) => {\n  const capitalizedString = string[0].toUpperCase() + string.slice(1)\n  return capitalizedString;\n}","import * as Yup from 'yup';\n\nexport const profileSchema = Yup.object().shape({\n  name: Yup.string().min(2).required('Name is required'),\n  email: Yup.string().email('invalid email address format').required('Email is required'),\n})","import styled from \"styled-components\";\nimport { profileSchema } from \"schemas/profileSchema\";\nimport { Formik, Form } from \"formik\";\nimport { ButtonPrimary } from \"components/buttons/ButtonPrimary\";\nimport { AuthInput } from \"./common/AuthInput\";\n\nconst CustomForm = styled(Form)`\n  @media screen and (min-width: ${p => p.theme.breakpoints.desktop}) {\n    width: 400px;\n  }\n`;\n\nconst initialValues = {\n  email: '',\n  name: '',\n};\n\nexport const ProfileForm = () => {\n\n  const submitHandler = (values) => {\n    console.log(values);\n    // const { email, name, password } = values;\n    // const userData = { email, name, password };\n    // dispatch(signupUser(userData));\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={profileSchema}\n      onSubmit={submitHandler}\n    >\n      {({ values, handleChange, errors, isValid, dirty  }) => (\n        <CustomForm>\n          <AuthInput id=\"name\" input=\"name\" type=\"text\" value={values.name} onChange={handleChange} error={errors.name} />\n          <AuthInput id=\"email\" input=\"email\" type=\"email\" value={values.email} onChange={handleChange} error={errors.email} />\n          <ButtonPrimary type=\"submit\" disabled={!isValid || !dirty} title=\"Update profile\" width=\"100%\" />\n        </CustomForm>\n      )}\n    </Formik>\n  );\n};\n","import styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { ProfileForm } from \"components/forms/auth/ProfileForm\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Avatar = styled.img`\n  width: 164px;\n  margin: 0 auto ${p => p.theme.spaces.xs} auto;\n  border-radius: 50%;\n  @media screen and (min-width: ${p => p.theme.breakpoints.desktop}) {\n    margin: 0 auto ${p => p.theme.spaces.m} auto;\n  }\n`;\n\nconst ProfilePage = () => {\n  const user = useSelector(state => state.auth);\n  //console.log(user);\n\n  return (\n    <Container>\n      <Avatar src={user.avatar} alt=\"\" />\n      <ProfileForm />\n    </Container>\n  );\n};\n\nexport default ProfilePage;"],"names":["Button","styled","p","width","theme","spaces","xxs","fontWeight","bold","fontSize","xs","borderRadius","s","colors","brand","white","green","grayScale","gray40","gray10","ButtonPrimary","type","disabled","title","onClick","inputOutlineColor","showError","error","input","support","gray20","ErrorContainer","light","gray30","ErrorIcon","AiOutlineInfoCircle","AuthError","size","Wrapper","color","Label","medium","Input","AuthInput","value","onChange","useState","setShowError","id","name","placeholder","onFocus","e","target","htmlFor","nameCapitalize","string","toUpperCase","slice","profileSchema","Yup","shape","min","required","email","CustomForm","Form","breakpoints","desktop","initialValues","ProfileForm","validationSchema","onSubmit","values","console","log","handleChange","errors","isValid","dirty","Container","Avatar","m","user","useSelector","state","auth","src","avatar","alt"],"sourceRoot":""}