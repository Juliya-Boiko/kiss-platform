{"version":3,"file":"static/js/925.2ca21043.chunk.js","mappings":"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","sources":["components/auth/VerifyWrapper.jsx","schemas/passwordSchema.js","components/forms/auth/PasswordForm.jsx","pages/ChangePasswordPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport { Section } from \"./common/Section.styled\";\nimport { Logo } from \"components/Logo/Logo\";\nimport { IoArrowBackCircleOutline } from \"react-icons/io5\";\nimport { MotionWrapper } from \"./common/MotionWrapper.styled\";\nimport { motion } from \"framer-motion\";\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n`;\n\nconst Link = styled(NavLink)`\n  display: block;\n  position: absolute;\n  top: ${p => p.theme.spaces.m};\n  left: ${p => p.theme.spaces.xs};\n  color: ${p => p.theme.colors.brand.green};\n  @media screen and (min-width: ${p => p.theme.breakpoints.desktop}) {\n    top: ${p => p.theme.spaces.xs};\n  }\n`;\n\nconst Text = styled(motion.p)`\n  margin: 0 0 ${p => p.theme.spaces.xs} 0 ;\n  font-weight: ${p => p.theme.fontWeight.regular};\n  font-size: ${p => p.theme.fontSize.xs};\n  line-height: 1.5;\n  text-align: center;\n  color: ${p => p.theme.colors.grayScale.gray30};\n  @media screen and (min-width: ${p => p.theme.breakpoints.desktop}) {\n    margin: 0 0 ${p => p.theme.spaces.l} 0 ;\n    font-size: ${p => p.theme.fontSize.s};\n  }\n`;\n\nexport const VerifyWrapper = ({ backTo, children }) => {\n  return (\n    <Container>\n      <Link to={backTo}><IoArrowBackCircleOutline size={32} /></Link>\n      <Section>\n        <Logo width=\"166\" heigth=\"66\" margin=\"60px\" />\n        <Text\n          initial={{ opacity: 0, scale: 0.5 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{\n            duration: 1,\n            delay: 0.2,\n            ease: [0.5, 0.71, 1, 1],\n          }}\n        >\n          Provident similique accusantium nemo autem. Veritati obcaecati tenetur iure eius earum ut molestias\n        </Text>\n        <MotionWrapper\n          initial={{ opacity: 0, scale: 0.5 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{\n            duration: 1,\n            delay: 0.3,\n            ease: [0.5, 0.71, 1, 1],\n          }}\n        >\n          {children}\n        </MotionWrapper>\n      </Section>\n    </Container>\n  );\n};","import * as Yup from 'yup';\n\nexport const passwordSchema = Yup.object().shape({\n  password: Yup.string().min(8).matches(/^\\S+$/, 'must not contain spaces').required('Password is required'),\n  confirm: Yup.string().oneOf([Yup.ref('password')], 'Dont match with password').required('Confirm password is required'),\n})","import { useDispatch, useSelector } from \"react-redux\";\nimport { passwordSchema } from \"schemas/passwordSchema\";\nimport { changePassword } from \"redux/auth/authOperations\";\nimport { Formik } from \"formik\";\nimport { AuthForm } from \"./common/AuthForm.styled\";\nimport { AuthInput } from \"components/forms/auth/common/AuthInput\";\nimport { ButtonPrimary } from \"components/buttons/ButtonPrimary\";\n\nconst initialValues = {\n  password: '',\n  confirm: '',\n}; \n\nexport const PasswordForm = () => {\n  const dispatch = useDispatch();\n  const userId = useSelector(state => state.auth.userId);\n\n  const submitHandler = (values) => {\n    const { password } = values;\n    const data = { id: userId, password }\n    dispatch(changePassword(data));\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={passwordSchema}\n      onSubmit={submitHandler}\n    >\n      {({ values, handleChange, errors, isValid, dirty }) => (\n        <AuthForm>\n          <AuthInput input=\"password\" type=\"password\" value={values.password} onChange={handleChange} error={errors.password} />\n          <AuthInput input=\"confirm\" type=\"password\" value={values.confirm} onChange={handleChange} error={errors.confirm} />\n          <ButtonPrimary type=\"submit\" disabled={!isValid || !dirty} title=\"Confirm\" width=\"100%\" />\n        </AuthForm>\n      )}\n    </Formik>\n  );\n};","import { VerifyWrapper } from \"components/auth/VerifyWrapper\";\nimport { PasswordForm } from \"components/forms/auth/PasswordForm\";\n\nconst ChangePasswordPage = () => {\n  return (\n    <VerifyWrapper backTo=\"/insert-code\">\n      <PasswordForm />\n    </VerifyWrapper>\n  );\n};\n\nexport default ChangePasswordPage;"],"names":["Container","styled","Link","NavLink","p","theme","spaces","m","xs","colors","brand","green","breakpoints","desktop","Text","motion","fontWeight","regular","fontSize","grayScale","gray30","l","s","VerifyWrapper","backTo","children","to","size","width","heigth","margin","initial","opacity","scale","animate","transition","duration","delay","ease","passwordSchema","Yup","shape","password","min","matches","required","confirm","oneOf","initialValues","PasswordForm","dispatch","useDispatch","userId","useSelector","state","auth","validationSchema","onSubmit","values","data","id","changePassword","handleChange","errors","isValid","dirty","AuthInput","input","type","value","onChange","error","ButtonPrimary","disabled","title"],"sourceRoot":""}