{"version":3,"file":"static/js/774.27c9e17e.chunk.js","mappings":"8NAIMA,EAAOC,EAAAA,GAAAA,EAAH,qGACM,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,CAAnB,IACA,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,WAAWC,IAAvB,IACH,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,SAASH,CAArB,IACL,SAAAH,GAAC,OAAIA,EAAEC,MAAMM,OAAOC,UAAUC,MAA7B,IAGCC,EAAU,WACrB,IACMC,GADeC,EAAAA,EAAAA,MAAbC,SACcC,MAAM,KAAK,IAAM,GAEvC,OACE,SAAChB,EAAD,WAAOiB,EAAAA,EAAAA,GAAeJ,IAEzB,C,yGChBaK,EAAkBjB,EAAAA,GAAAA,IAAH,4GAEK,SAAAC,GAAC,OAAIA,EAAEC,MAAMgB,YAAYC,OAAxB,IAKtBC,EAAmBpB,EAAAA,GAAAA,IAAH,4GAEK,SAAAC,GAAC,OAAIA,EAAEC,MAAMgB,YAAYC,OAAxB,G,uDCX5B,IAAMH,EAAiB,SAACK,GAE7B,OAD0BA,EAAO,GAAGC,cAAgBD,EAAOE,MAAM,EAElE,C,8FC+BD,UA3BsB,WACpB,IAAMC,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,KAAf,IACzBI,GAAQH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAME,MAAMC,KAAhB,IACzBC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,GAAYT,GACtB,GAAE,CAACM,EAAUN,KAGZ,4BACE,SAAC,IAAD,WACE,SAAC,EAAAU,EAAD,OAGF,0CACkB,IAAjBN,EAAMO,SAAgB,4CACtBP,IAAS,wBACPA,EAAMQ,KAAI,SAAAC,GACT,OAAO,0BAAoBA,EAAKC,OAAzB,MAAoCD,EAAKE,QAAhCF,EAAKG,IACtB,QAKR,C","sources":["components/Scrumbs/Scrumbs.jsx","components/common/MediaContainers.styled.js","helpers/nameCapitalize.js","pages/StatisticPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { useLocation } from \"react-router-dom\";\nimport { nameCapitalize } from \"helpers/nameCapitalize\";\n\nconst Text = styled.p`\n  margin: 0 0 ${p => p.theme.spaces.s} 0;\n  font-weight: ${p => p.theme.fontWeight.bold};\n  font-size: ${p => p.theme.fontSize.s};\n  color: ${p => p.theme.colors.grayScale.gray20};\n`;\n\nexport const Scrumbs = () => {\n  const { pathname } = useLocation();\n  const path = pathname.split('/')[2] || '';\n\n  return (\n    <Text>{nameCapitalize(path)}</Text>\n  );\n};","import styled from \"styled-components\";\n\n export const MobileContainer = styled.div`\n  display: block;\n  @media screen and (min-width: ${p => p.theme.breakpoints.desktop}) {\n    display: none;\n  }\n`;\n\nexport const DesktopContainer = styled.div`\n  display: none;\n  @media screen and (min-width: ${p => p.theme.breakpoints.desktop}) {\n    display: block;\n  }\n`;","export const nameCapitalize = (string) => {\n  const capitalizedString = string[0].toUpperCase() + string.slice(1)\n  return capitalizedString;\n}","import { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { getAllTasks } from \"redux/tasks/tasksOperations\";\nimport { Scrumbs } from \"components/Scrumbs/Scrumbs\";\nimport { MobileContainer } from \"components/common/MediaContainers.styled\";\n\nconst StatisticPage = () => {\n  const token = useSelector(state => state.auth.token);\n  const tasks = useSelector(state => state.tasks.items);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllTasks(token));    \n  }, [dispatch, token]);\n\n  return (\n    <div>\n      <MobileContainer>\n        <Scrumbs />\n      </MobileContainer>\n\n      <h1>StatisticPage</h1>\n      {tasks.length === 0 && <p>Tasks list EMPTY</p>}\n      {tasks && <ul>\n        {tasks.map(item => {\n          return <li key={item._id}>{item.status} : {item.title}</li>\n        })}\n      </ul>}\n\n    </div>\n  );\n};\n\nexport default StatisticPage;"],"names":["Text","styled","p","theme","spaces","s","fontWeight","bold","fontSize","colors","grayScale","gray20","Scrumbs","path","useLocation","pathname","split","nameCapitalize","MobileContainer","breakpoints","desktop","DesktopContainer","string","toUpperCase","slice","token","useSelector","state","auth","tasks","items","dispatch","useDispatch","useEffect","getAllTasks","S","length","map","item","status","title","_id"],"sourceRoot":""}