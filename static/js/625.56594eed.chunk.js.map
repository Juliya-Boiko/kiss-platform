{"version":3,"file":"static/js/625.56594eed.chunk.js","mappings":"6OAEaA,EAAcC,EAAAA,KAAaC,MAAM,CAC5CC,MAAOF,EAAAA,KAAaE,MAAM,gCAAgCC,SAAS,qBACnEC,SAAUJ,EAAAA,KAAaK,QAAQ,QAAS,2BAA2BF,SAAS,0B,qECKxEG,EAAgB,CACpBJ,MAAO,GACPE,SAAU,IAGCG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,KAAD,CACEH,cAAeA,EACfI,SAPkB,SAACC,GACrBH,GAASI,EAAAA,EAAAA,IAAUD,GACpB,EAMGE,iBAAkBd,EAHpB,SAKG,gBAAGY,EAAH,EAAGA,OAAQG,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,OAAQC,EAAjC,EAAiCA,QAASC,EAA1C,EAA0CA,MAA1C,OACC,UAAC,IAAD,YACE,SAACC,EAAA,EAAD,CAAWC,MAAM,QAAQC,KAAK,QAAQC,MAAOV,EAAOT,MAAOoB,SAAUR,EAAcS,MAAOR,EAAOb,SACjG,SAACsB,EAAA,EAAD,CAAcL,MAAM,WAAWE,MAAOV,EAAOP,SAAUkB,SAAUR,EAAcS,MAAOR,EAAOb,SAC7F,SAACuB,EAAA,EAAD,CAAeL,KAAK,SAASM,UAAWV,IAAYC,EAAOU,MAAM,QAAQC,MAAM,WAJlF,GASN,E,oBC9BKC,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,IAAPD,CAAH,qEACD,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,EAAnB,IAIPC,GAAON,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,iJACO,SAAAE,GAAC,OAAIA,EAAEC,MAAMK,WAAWC,MAAvB,IACH,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,SAASL,EAArB,IACL,SAAAH,GAAC,OAAIA,EAAEC,MAAMQ,OAAOC,MAAMC,KAAzB,IACsB,SAAAX,GAAC,OAAIA,EAAEC,MAAMW,YAAYC,OAAxB,IAClB,SAAAb,GAAC,OAAIA,EAAEC,MAAMO,SAASM,CAArB,IAuBlB,EAnBkB,WAChB,OACE,UAACC,EAAA,EAAD,CAAaC,SAAS,6BAA6BC,QAAQ,UAAUC,MAAM,oBAA3E,WACE,SAAC3C,EAAD,KACA,SAACsB,EAAD,CACEsB,QAAS,CAAEC,QAAS,EAAGC,MAAO,IAC9BC,QAAS,CAAEF,QAAS,EAAGC,MAAO,GAC9BE,WAAY,CACVC,SAAU,EACVC,MAAO,GACPC,KAAM,CAAC,GAAK,IAAM,EAAG,IANzB,UASE,SAACtB,EAAD,CAAMuB,GAAG,mBAAT,iCAIP,C","sources":["schemas/loginSchema.js","components/forms/auth/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const loginSchema = Yup.object().shape({\n  email: Yup.string().email('invalid email address format').required('Email is required'),\n  password: Yup.string().matches(/^\\S+$/, 'must not contain spaces').required('Password is required'),\n})","import { useDispatch } from \"react-redux\";\nimport { loginSchema } from \"schemas/loginSchema\";\nimport { loginUser } from \"redux/auth/authOperations\";\nimport { Formik } from \"formik\";\nimport { AuthForm } from \"./common/AuthForm.styled\";\nimport { AuthInput } from \"components/forms/auth/common/AuthInput\";\nimport { ButtonPrimary } from \"components/buttons/ButtonPrimary\";\nimport { AuthPassword } from \"./common/AuthPassword\";\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const submitHandler = (values) => {\n    dispatch(loginUser(values));\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={submitHandler}\n      validationSchema={loginSchema}\n    >\n      {({ values, handleChange, errors, isValid, dirty }) => (\n        <AuthForm>\n          <AuthInput input=\"email\" type=\"email\" value={values.email} onChange={handleChange} error={errors.email} />\n          <AuthPassword input=\"password\" value={values.password} onChange={handleChange} error={errors.email}  />\n          <ButtonPrimary type=\"submit\" disabled={!isValid || !dirty} title=\"Login\" width=\"100%\" />\n        </AuthForm>\n      )}\n    </Formik>\n  );\n}","import styled from 'styled-components';\nimport { motion } from \"framer-motion\";\nimport { LoginForm } from 'components/forms/auth/LoginForm';\nimport { AuthWrapper } from 'components/auth/AuthWrapper';\nimport { NavLink } from 'react-router-dom';\n\nconst Wrapper = styled(motion.div)`\n  margin: ${p => p.theme.spaces.xs} 0 0 auto;\n  text-align: end;\n`;\n\nconst Link = styled(NavLink)`\n  font-weight: ${p => p.theme.fontWeight.medium};\n  font-size: ${p => p.theme.fontSize.xs};\n  color: ${p => p.theme.colors.brand.green};\n  @media screen and (min-width: ${p => p.theme.breakpoints.desktop}) {\n    font-size: ${p => p.theme.fontSize.s};\n  }\n`;\n\nconst LoginPage = () => {\n  return (\n    <AuthWrapper navTitle=\"Don't you have an account?\" navLink=\"/signup\" navTo=\"Create an account\" >\n      <LoginForm />\n      <Wrapper\n        initial={{ opacity: 0, scale: 0.5 }}\n        animate={{ opacity: 1, scale: 1 }}\n        transition={{\n          duration: 1,\n          delay: 0.4,\n          ease: [0.5, 0.71, 1, 1],\n        }}\n      >\n        <Link to=\"/forgot-password\">Forgot password</Link>\n      </Wrapper>\n    </AuthWrapper>\n  );\n};\n\nexport default LoginPage;"],"names":["loginSchema","Yup","shape","email","required","password","matches","initialValues","LoginForm","dispatch","useDispatch","onSubmit","values","loginUser","validationSchema","handleChange","errors","isValid","dirty","AuthInput","input","type","value","onChange","error","AuthPassword","ButtonPrimary","disabled","title","width","Wrapper","styled","motion","p","theme","spaces","xs","Link","NavLink","fontWeight","medium","fontSize","colors","brand","green","breakpoints","desktop","s","AuthWrapper","navTitle","navLink","navTo","initial","opacity","scale","animate","transition","duration","delay","ease","to"],"sourceRoot":""}