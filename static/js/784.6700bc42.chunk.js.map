{"version":3,"file":"static/js/784.6700bc42.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.0.1\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { warning } from '../../utils/errors.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animateValue({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         *\n         * isControlled should be set to true if sample is being run within\n         * a loop. This indicates that we're not arbitrarily sampling\n         * the animation but running it one step after another. Therefore\n         * we don't need to run a low-res version here. This is a stop-gap\n         * until a rewrite can sample for time.\n         */\n        sample: (t, isControlled = false) => {\n            elapsed = initialElapsed;\n            if (isControlled) {\n                update(t);\n                return state;\n            }\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animateValue, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateValue } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            elapsed: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t, true);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animateValue } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animateValue({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from '../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animateValue } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !((isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.0.1\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.0.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","undefined","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","_objectWithoutProperties","excluded","sourceKeys","keys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","push","cancel","index","splice","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","read","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","maxDuration","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","passTimestamp","animateValue","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","isControlled","sampleResolution","sampleElapsed","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","controls","dragControls","addListeners","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","fallback","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","record","data","MotionDebug","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}